import "Srl/Console";
import "Pthread.alusus";

func test {    
   use Pthread;

   def pthread1: Pthread;
   def pthread2: Pthread;
   def iret1: int;
   def iret2: int;
   
    createThread(pthread1~ptr, 0, printMessage~ptr, "thread1");
    createThread(pthread2~ptr, 0, printMessage~ptr, "thraed2");
    
    joinThread(pthread1, 0);
    joinThread(pthread2, 0);
    
    //pthread_mutex_louk(pthread1~ptr, "mutex");
  //  while (!condition){
   // pthread_cond_wait( "cond", "mutex");   
    //pthread_mutex_unlouk("mutex");
    //}
    
    //pthread_mutex_lock(pthread2~ptr, "mutext");
  //  pthread_mutex_signal("cond");
   // pthread_mutex_unlock("mutex");
     
     pthread_mutex_louk(pthread1~ptr, "mutex");
     pthread_cond_wait(pthread1~ptr, "cond", "mutex");
      Srl.Console.print("it works!\n");
     pthread_mutex_unlock(pthread1~ptr, "mutex");
     
    pthread_mutex_lock(pthread2~ptr, "mutex");
    pthread_cond_signal(pthread2~ptr, "cond");  
    pthread_mutex_unlock(pthread2~ptr, "mutex");
    
func printMessage (p: ptr): ptr {
   Srl.Console.print("it works!\n");
   return 0;
}
   
test();

